import { all, getContext } from 'redux-saga/effects'

export default function* morfixWatcher() {
  const watchers = yield getContext('watchers')

  yield all([
    watchers.morfix.createEncParmsWatcher(),
    watchers.morfix.createContextWatcher(),
    watchers.morfix.createKeyGeneratorWatcher(),
    watchers.morfix.deletePublicKeyWatcher(),
    watchers.morfix.deleteSecretKeyWatcher(),
    watchers.morfix.deleteRelinKeyWatcher(),
    watchers.morfix.deleteGaloisKeyWatcher(),
    watchers.morfix.setActivePublicKeyWatcher(),
    watchers.morfix.setActiveSecretKeyWatcher(),
    watchers.morfix.setActiveRelinKeyWatcher(),
    watchers.morfix.setActiveGaloisKeyWatcher(),
    watchers.morfix.generatePublicKeyWatcher(),
    watchers.morfix.generateSecretKeyWatcher(),
    watchers.morfix.generateRelinKeyWatcher(),
    watchers.morfix.generateGaloisKeyWatcher(),
    watchers.morfix.triggerDownloadWatcher(),
    watchers.morfix.downloadPublicKeyWatcher(),
    watchers.morfix.downloadSecretKeyWatcher(),
    watchers.morfix.downloadRelinKeyWatcher(),
    watchers.morfix.downloadGaloisKeyWatcher(),
    watchers.morfix.uploadPublicKeyWatcher(),
    watchers.morfix.uploadSecretKeyWatcher(),
    watchers.morfix.uploadRelinKeyWatcher(),
    watchers.morfix.uploadGaloisKeyWatcher(),
    watchers.morfix.createIntegerEncoderWatcher(),
    watchers.morfix.createBatchEncoderWatcher(),
    watchers.morfix.createCkksEncoderWatcher(),
    watchers.morfix.createEncryptorWatcher(),
    watchers.morfix.createDecryptorWatcher(),
    watchers.morfix.createEvaluatorWatcher(),
    watchers.morfix.batchEncodeInt32Watcher(),
    watchers.morfix.batchEncodeUint32Watcher(),
    watchers.morfix.ckksEncodeFloat64Watcher(),
    watchers.morfix.batchDecodeInt32Watcher(),
    watchers.morfix.batchDecodeUint32Watcher(),
    watchers.morfix.ckksDecodeFloat64Watcher(),
    watchers.morfix.createPlainTextWatcher(),
    watchers.morfix.readPlainTextWatcher(),
    watchers.morfix.updatePlainTextWatcher(),
    watchers.morfix.deletePlainTextWatcher(),
    watchers.morfix.downloadPlainTextWatcher(),
    watchers.morfix.updatePlainTextWatcher(),
    watchers.morfix.uploadPlainTextWatcher(),
    watchers.morfix.loadPlainTextWatcher(),
    watchers.morfix.createCipherTextWatcher(),
    watchers.morfix.readCipherTextWatcher(),
    watchers.morfix.updateCipherTextWatcher(),
    watchers.morfix.deleteCipherTextWatcher(),
    watchers.morfix.downloadCipherTextWatcher(),
    watchers.morfix.updateCipherTextWatcher(),
    watchers.morfix.uploadCipherTextWatcher(),
    watchers.morfix.loadCipherTextWatcher(),
    watchers.morfix.encryptWatcher(),
    watchers.morfix.decryptWatcher(),
    watchers.morfix.engineCreateActionWatcher(),
    watchers.morfix.engineUpdateActionWatcher(),
    watchers.morfix.engineDeleteActionWatcher(),
    watchers.morfix.engineExecuteAllActionsWatcher(),
    watchers.morfix.evaluateNegateCipherWatcher(),
    watchers.morfix.evaluateAddCipherToCipherWatcher(),
    watchers.morfix.evaluateAddPlainToCipherWatcher(),
    watchers.morfix.evaluateSubCipherFromCipherWatcher(),
    watchers.morfix.evaluateSubPlainFromCipherWatcher(),
    watchers.morfix.evaluateMultiplyCipherByCipherWatcher(),
    watchers.morfix.evaluateMultiplyCipherByPlainWatcher(),
    watchers.morfix.evaluateSquareCipherWatcher(),
    watchers.morfix.evaluateRelinearizeCipherWatcher(),
    watchers.morfix.evaluateExponentiateCipherWatcher(),
    watchers.morfix.evaluateCipherModulusSwitchToNextWatcher(),
    watchers.morfix.evaluatePlainModulusSwitchToNextWatcher(),
    watchers.morfix.evaluateCipherRescaleToNextWatcher(),
    watchers.morfix.evaluatePlainTransformToNTTWatcher(),
    watchers.morfix.evaluateCipherTransformToNTTWatcher(),
    watchers.morfix.evaluateCipherTransformFromNTTWatcher(),
    watchers.morfix.evaluateRotateRowsWatcher(),
    watchers.morfix.evaluateRotateColumnsWatcher(),
    watchers.morfix.evaluateRotateVectorWatcher(),
    watchers.morfix.evaluateComplexConjugateWatcher(),
    watchers.morfix.evaluateSumElementsWatcher(),
    watchers.morfix.evaluateDotProductWatcher(),
    watchers.morfix.evaluateDotProductPlainWatcher()
  ])
}
